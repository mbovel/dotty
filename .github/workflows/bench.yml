name: Benchmarks

on:
  pull_request:
    types:
      - closed
  repository_dispatch:
    types: [run_benchmarks]
  schedule:
    # every night at 03:33
    - cron: '33 3 * * *'

jobs:
  benchmarks_push:
    name: Benchmarks (merge)
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    runs-on: ['self-hosted', 'benchmarks']

    steps:

    - name: data test
      env:
        DATA_PATH: /home/scalabenchs/bench-data-v3
      run: |
        echo ${{github.event.pull_request.number}}
        echo $GITHUB_SHA
        echo $DATA_PATH/data.csv
        echo ${{github.event.pull_request.merged_at}}
        echo $(date -u +"%Y-%m-%dT%H:%M:%SZ")

    - name: Check out the repository
      uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Set Path
      run: |
        echo "/home/scalabenchs/.local/share/coursier/bin" >> $GITHUB_PATH

    - name: Run Benchmarks
      # Select benchmarks that do not contain `Nightly` or `Bootstrapped` in
      # their name.
      # `-foe true` means "fail on error".
      # `-gc true` launches the garbage collector between each iterations, which
      # significantly reduces the noise.
      run: "sbt 'scala3-bench / Jmh / run -foe true -gc true -e Nightly -e Bootstrapped' | tee jmh_output.txt"

    - name: Run Bootstrapped Benchmarks
      # Select benchmarks that contain `Bootstrapped` in their name, but not
      # `Nightly`.
      run: "sbt 'scala3-bench-bootstrapped / Jmh / run -foe true -gc true -e Nightly Bootstrapped' | tee jmh_bootstrapped_output.txt"

    - name: Upload Results
      env:
        DATA_PATH: /home/scalabenchs/bench-data-v3
      run: |
        scala $DATA_PATH/scripts --main-class importResults -- ${{github.event.pull_request.number} true $GITHUB_SHA $DATA_PATH/data.csv $DATA_PATH/vizualizer/data
        scala /home/scalabenchs/bench-data-v3/scripts --main-class makeVizualizerData -- /home/scalabenchs/bench-data-v3/data.csv /home/scalabenchs/bench-data-v3/vizualizer/data




    # - name: Post Comment
    #   if: github.event_name == 'issue_comment'
    #   uses: actions/github-script@v6
    #   with:
    #     script: |
    #       const issue_number = context.payload.issue.number;
    #       const comment = `Benchmarks have been triggered. The results will be posted soon.`;
    #       await github.issues.createComment({
    #         issue_number: issue_number,
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         body: comment,
    #       });


  benchmarks_manual:
    name: Benchmarks (manual)
    if: github.event_name == 'repository_dispatch'
    runs-on: ['self-hosted', 'benchmarks']

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4
      with:
        submodules: 'true'
        ref: ${{ github.event.client_payload.commit }}
        repository: ${{ github.event.client_payload.repo }}

    - name: Set Path
      run: |
        echo "/home/scalabenchs/.local/share/coursier/bin" >> $GITHUB_PATH

    - name: Run Benchmarks
      run: "sbt 'scala3-bench / Jmh / run -foe true -gc true -e Bootstrapped'"

    - name: Run Bootstrapped Benchmarks
      run: "sbt 'scala3-bench-bootstrapped / Jmh / run -foe true -gc true Bootstrapped'"

    - name: Upload Results
      run: "echo 'Uploading results...'"

    # - name: Post Comment
    #   if: github.event_name == 'issue_comment'
    #   uses: actions/github-script@v6
    #   with:
    #     script: |
    #       const issue_number = context.payload.issue.number;
    #       const comment = `Benchmarks have been triggered. The results will be posted soon.`;
    #       await github.issues.createComment({
    #         issue_number: issue_number,
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         body: comment,
    #       });

  benchmarks_nightly:
    name: Benchmarks (nightly)
    if: github.event_name == 'schedule'
    runs-on: ['self-hosted', 'benchmarks']

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Set Path
      run: |
        echo "/home/scalabenchs/.local/share/coursier/bin" >> $GITHUB_PATH

    - name: Run Benchmarks
      run: "sbt 'scala3-bench / Jmh / run -foe true -gc true -e Bootstrapped Nightly'"

    - name: Upload Results
      run: "echo 'Uploading results...'"
