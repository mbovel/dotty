
{
  "trace": [{"event": {"$type": "CheckExprConforms", "from": "Object", "to": "a type that can be selected or applied", "result": "Object"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(Object#<init> : (): Object)", "to": "<?>", "result": "(Object#<init> : (): Object)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "Object", "to": "<?>", "result": "Object"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this : BoolExprs)", "to": "a type that can be selected or applied", "result": "(BoolExprs.this : BoolExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this.v01 : (Boolean with true))", "to": "(Boolean with ?1(it))", "result": "(BoolExprs.this.v01 : (Boolean with true))"}, "children": [{"event": {"$type": "OfType", "from": "(Boolean with true)", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "true"}, "children": []},{"event": {"$type": "Check", "from": "true", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "true", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "true", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(BoolExprs.this.v01 : (Boolean with true))", "result": "it == BoolExprs.this.v01"}, "children": []},{"event": {"$type": "OfType", "from": "(Boolean with ?1(it))", "result": "?1(it)"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Boolean with true)", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == BoolExprs.this.v01"}, "children": []},{"event": {"$type": "Check", "from": "it == BoolExprs.this.v01", "to": "?1(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v01", "to": "?1(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v01", "to": "?1(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == BoolExprs.this.v01", "to": "?1(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this : BoolExprs)", "to": "a type that can be selected or applied", "result": "(BoolExprs.this : BoolExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this.v02 : (Boolean with false))", "to": "(Boolean with ?2(it))", "result": "(BoolExprs.this.v02 : (Boolean with false))"}, "children": [{"event": {"$type": "OfType", "from": "(Boolean with false)", "result": "false"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "false"}, "children": []},{"event": {"$type": "Check", "from": "false", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "false", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "false", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(BoolExprs.this.v02 : (Boolean with false))", "result": "it == BoolExprs.this.v02"}, "children": []},{"event": {"$type": "OfType", "from": "(Boolean with ?2(it))", "result": "?2(it)"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Boolean with false)", "result": "false"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == BoolExprs.this.v02 and false"}, "children": []},{"event": {"$type": "Check", "from": "it == BoolExprs.this.v02 and false", "to": "?2(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v02 and false", "to": "?2(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v02 and false", "to": "?2(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == BoolExprs.this.v02 and false", "to": "?2(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this : BoolExprs)", "to": "a type that can be selected or applied", "result": "(BoolExprs.this : BoolExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this.v03 : (Boolean with !(it)))", "to": "(Boolean with ?3(it))", "result": "(BoolExprs.this.v03 : (Boolean with !(it)))"}, "children": [{"event": {"$type": "OfType", "from": "(Boolean with !(it))", "result": "!(it)"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "!(it)"}, "children": []},{"event": {"$type": "Check", "from": "!(it)", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "!(it)", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "!(it)", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(BoolExprs.this.v03 : (Boolean with !(it)))", "result": "it == BoolExprs.this.v03"}, "children": []},{"event": {"$type": "OfType", "from": "(Boolean with ?3(it))", "result": "?3(it)"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Boolean with !(it))", "result": "!(it)"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == BoolExprs.this.v03 and !(BoolExprs.this.v03)"}, "children": []},{"event": {"$type": "Check", "from": "it == BoolExprs.this.v03 and !(BoolExprs.this.v03)", "to": "?3(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v03 and !(BoolExprs.this.v03)", "to": "?3(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v03 and !(BoolExprs.this.v03)", "to": "?3(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == BoolExprs.this.v03 and !(BoolExprs.this.v03)", "to": "?3(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this : BoolExprs)", "to": "a type that can be selected or applied", "result": "(BoolExprs.this : BoolExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this.v04 : (Boolean with it and it))", "to": "(Boolean with ?4(it))", "result": "(BoolExprs.this.v04 : (Boolean with it and it))"}, "children": [{"event": {"$type": "OfType", "from": "(Boolean with it and it)", "result": "it and it"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it and it"}, "children": []},{"event": {"$type": "Check", "from": "it and it", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it and it", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "it and it", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(BoolExprs.this.v04 : (Boolean with it and it))", "result": "it == BoolExprs.this.v04"}, "children": []},{"event": {"$type": "OfType", "from": "(Boolean with ?4(it))", "result": "?4(it)"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Boolean with it and it)", "result": "it and it"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == BoolExprs.this.v04 and BoolExprs.this.v04 and BoolExprs.this.v04"}, "children": []},{"event": {"$type": "Check", "from": "it == BoolExprs.this.v04 and BoolExprs.this.v04 and BoolExprs.this.v04", "to": "?4(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v04 and BoolExprs.this.v04 and BoolExprs.this.v04", "to": "?4(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v04 and BoolExprs.this.v04 and BoolExprs.this.v04", "to": "?4(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == BoolExprs.this.v04 and BoolExprs.this.v04 and BoolExprs.this.v04", "to": "?4(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this : BoolExprs)", "to": "a type that can be selected or applied", "result": "(BoolExprs.this : BoolExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this.v05 : (Boolean with it))", "to": "(Boolean with ?5(it))", "result": "(BoolExprs.this.v05 : (Boolean with it))"}, "children": [{"event": {"$type": "OfType", "from": "(Boolean with it)", "result": "it"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it"}, "children": []},{"event": {"$type": "Check", "from": "it", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "it", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(BoolExprs.this.v05 : (Boolean with it))", "result": "it == BoolExprs.this.v05"}, "children": []},{"event": {"$type": "OfType", "from": "(Boolean with ?5(it))", "result": "?5(it)"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Boolean with it)", "result": "it"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == BoolExprs.this.v05 and BoolExprs.this.v05"}, "children": []},{"event": {"$type": "Check", "from": "it == BoolExprs.this.v05 and BoolExprs.this.v05", "to": "?5(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v05 and BoolExprs.this.v05", "to": "?5(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v05 and BoolExprs.this.v05", "to": "?5(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == BoolExprs.this.v05 and BoolExprs.this.v05", "to": "?5(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this : BoolExprs)", "to": "a type that can be selected or applied", "result": "(BoolExprs.this : BoolExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this.v06 : (Boolean with BoolExprs.this.c))", "to": "(Boolean with ?6(it))", "result": "(BoolExprs.this.v06 : (Boolean with BoolExprs.this.c))"}, "children": [{"event": {"$type": "OfType", "from": "(Boolean with BoolExprs.this.c)", "result": "BoolExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "BoolExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "BoolExprs.this.c", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "BoolExprs.this.c", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "BoolExprs.this.c", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(BoolExprs.this.v06 : (Boolean with BoolExprs.this.c))", "result": "it == BoolExprs.this.v06"}, "children": []},{"event": {"$type": "OfType", "from": "(Boolean with ?6(it))", "result": "?6(it)"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Boolean with BoolExprs.this.c)", "result": "BoolExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == BoolExprs.this.v06 and BoolExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "it == BoolExprs.this.v06 and BoolExprs.this.c", "to": "?6(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v06 and BoolExprs.this.c", "to": "?6(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v06 and BoolExprs.this.c", "to": "?6(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == BoolExprs.this.v06 and BoolExprs.this.c", "to": "?6(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this : BoolExprs)", "to": "a type that can be selected or applied", "result": "(BoolExprs.this : BoolExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this.v07 : (Boolean with !(BoolExprs.this.c)))", "to": "(Boolean with ?7(it))", "result": "(BoolExprs.this.v07 : (Boolean with !(BoolExprs.this.c)))"}, "children": [{"event": {"$type": "OfType", "from": "(Boolean with !(BoolExprs.this.c))", "result": "!(BoolExprs.this.c)"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "!(BoolExprs.this.c)"}, "children": []},{"event": {"$type": "Check", "from": "!(BoolExprs.this.c)", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "!(BoolExprs.this.c)", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "!(BoolExprs.this.c)", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(BoolExprs.this.v07 : (Boolean with !(BoolExprs.this.c)))", "result": "it == BoolExprs.this.v07"}, "children": []},{"event": {"$type": "OfType", "from": "(Boolean with ?7(it))", "result": "?7(it)"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Boolean with !(BoolExprs.this.c))", "result": "!(BoolExprs.this.c)"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == BoolExprs.this.v07 and !(BoolExprs.this.c)"}, "children": []},{"event": {"$type": "Check", "from": "it == BoolExprs.this.v07 and !(BoolExprs.this.c)", "to": "?7(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v07 and !(BoolExprs.this.c)", "to": "?7(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v07 and !(BoolExprs.this.c)", "to": "?7(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == BoolExprs.this.v07 and !(BoolExprs.this.c)", "to": "?7(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this : BoolExprs)", "to": "a type that can be selected or applied", "result": "(BoolExprs.this : BoolExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this.v08 : (Boolean with it and BoolExprs.this.c))", "to": "(Boolean with ?8(it))", "result": "(BoolExprs.this.v08 : (Boolean with it and BoolExprs.this.c))"}, "children": [{"event": {"$type": "OfType", "from": "(Boolean with it and BoolExprs.this.c)", "result": "it and BoolExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it and BoolExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "it and BoolExprs.this.c", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it and BoolExprs.this.c", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "it and BoolExprs.this.c", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(BoolExprs.this.v08 : (Boolean with it and BoolExprs.this.c))", "result": "it == BoolExprs.this.v08"}, "children": []},{"event": {"$type": "OfType", "from": "(Boolean with ?8(it))", "result": "?8(it)"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Boolean with it and BoolExprs.this.c)", "result": "it and BoolExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == BoolExprs.this.v08 and BoolExprs.this.v08 and BoolExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "it == BoolExprs.this.v08 and BoolExprs.this.v08 and BoolExprs.this.c", "to": "?8(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v08 and BoolExprs.this.v08 and BoolExprs.this.c", "to": "?8(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v08 and BoolExprs.this.v08 and BoolExprs.this.c", "to": "?8(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == BoolExprs.this.v08 and BoolExprs.this.v08 and BoolExprs.this.c", "to": "?8(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this : BoolExprs)", "to": "a type that can be selected or applied", "result": "(BoolExprs.this : BoolExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this.v09 : (Boolean with it or BoolExprs.this.c))", "to": "(Boolean with ?9(it))", "result": "(BoolExprs.this.v09 : (Boolean with it or BoolExprs.this.c))"}, "children": [{"event": {"$type": "OfType", "from": "(Boolean with it or BoolExprs.this.c)", "result": "it or BoolExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it or BoolExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "it or BoolExprs.this.c", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it or BoolExprs.this.c", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "it", "to": "true", "result": "true"}, "children": []}]},{"event": {"$type": "TryImply", "from": "BoolExprs.this.c", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "BoolExprs.this.c", "to": "true", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "OfType", "from": "(BoolExprs.this.v09 : (Boolean with it or BoolExprs.this.c))", "result": "it == BoolExprs.this.v09"}, "children": []},{"event": {"$type": "OfType", "from": "(Boolean with ?9(it))", "result": "?9(it)"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Boolean with it or BoolExprs.this.c)", "result": "it or BoolExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == BoolExprs.this.v09 and BoolExprs.this.v09 or BoolExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "it == BoolExprs.this.v09 and BoolExprs.this.v09 or BoolExprs.this.c", "to": "?9(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v09 and BoolExprs.this.v09 or BoolExprs.this.c", "to": "?9(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v09 and BoolExprs.this.v09 or BoolExprs.this.c", "to": "?9(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == BoolExprs.this.v09 and BoolExprs.this.v09 or BoolExprs.this.c", "to": "?9(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this : BoolExprs)", "to": "a type that can be selected or applied", "result": "(BoolExprs.this : BoolExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(BoolExprs.this.v10 : (Boolean with BoolExprs.this.f(it)))", "to": "(Boolean with ?10(it))", "result": "(BoolExprs.this.v10 : (Boolean with BoolExprs.this.f(it)))"}, "children": [{"event": {"$type": "OfType", "from": "(Boolean with BoolExprs.this.f(it))", "result": "BoolExprs.this.f(it)"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "OfType", "from": "(b: Boolean): Boolean", "result": "true"}, "children": []},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "BoolExprs.this.f(it)"}, "children": []},{"event": {"$type": "Check", "from": "BoolExprs.this.f(it)", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "BoolExprs.this.f(it)", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "BoolExprs.this.f(it)", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(BoolExprs.this.v10 : (Boolean with BoolExprs.this.f(it)))", "result": "it == BoolExprs.this.v10"}, "children": []},{"event": {"$type": "OfType", "from": "(Boolean with ?10(it))", "result": "?10(it)"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Boolean with BoolExprs.this.f(it))", "result": "BoolExprs.this.f(it)"}, "children": [{"event": {"$type": "OfType", "from": "Boolean", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(b: Boolean): Boolean", "result": "true"}, "children": []},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == BoolExprs.this.v10 and BoolExprs.this.f(BoolExprs.this.v10)"}, "children": []},{"event": {"$type": "Check", "from": "it == BoolExprs.this.v10 and BoolExprs.this.f(BoolExprs.this.v10)", "to": "?10(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v10 and BoolExprs.this.f(BoolExprs.this.v10)", "to": "?10(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == BoolExprs.this.v10 and BoolExprs.this.f(BoolExprs.this.v10)", "to": "?10(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == BoolExprs.this.v10 and BoolExprs.this.f(BoolExprs.this.v10)", "to": "?10(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "Object", "to": "a type that can be selected or applied", "result": "Object"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(Object#<init> : (): Object)", "to": "<?>", "result": "(Object#<init> : (): Object)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "Object", "to": "<?>", "result": "Object"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this : IntExprs)", "to": "a type that can be selected or applied", "result": "(IntExprs.this : IntExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this.v01 : (Int with it == 0))", "to": "(Int with ?12(it))", "result": "(IntExprs.this.v01 : (Int with it == 0))"}, "children": [{"event": {"$type": "OfType", "from": "(Int with it == 0)", "result": "it == 0"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == 0"}, "children": []},{"event": {"$type": "Check", "from": "it == 0", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == 0", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "it == 0", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(IntExprs.this.v01 : (Int with it == 0))", "result": "it == IntExprs.this.v01"}, "children": []},{"event": {"$type": "OfType", "from": "(Int with ?12(it))", "result": "?12(it)"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Int with it == 0)", "result": "it == 0"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == IntExprs.this.v01 and IntExprs.this.v01 == 0"}, "children": []},{"event": {"$type": "Check", "from": "it == IntExprs.this.v01 and IntExprs.this.v01 == 0", "to": "?12(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v01 and IntExprs.this.v01 == 0", "to": "?12(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v01 and IntExprs.this.v01 == 0", "to": "?12(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == IntExprs.this.v01 and IntExprs.this.v01 == 0", "to": "?12(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this : IntExprs)", "to": "a type that can be selected or applied", "result": "(IntExprs.this : IntExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this.v02 : (Int with -(it) == 0))", "to": "(Int with ?13(it))", "result": "(IntExprs.this.v02 : (Int with -(it) == 0))"}, "children": [{"event": {"$type": "OfType", "from": "(Int with -(it) == 0)", "result": "-(it) == 0"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "-(it) == 0"}, "children": []},{"event": {"$type": "Check", "from": "-(it) == 0", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "-(it) == 0", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "-(it) == 0", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(IntExprs.this.v02 : (Int with -(it) == 0))", "result": "it == IntExprs.this.v02"}, "children": []},{"event": {"$type": "OfType", "from": "(Int with ?13(it))", "result": "?13(it)"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Int with -(it) == 0)", "result": "-(it) == 0"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == IntExprs.this.v02 and -(IntExprs.this.v02) == 0"}, "children": []},{"event": {"$type": "Check", "from": "it == IntExprs.this.v02 and -(IntExprs.this.v02) == 0", "to": "?13(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v02 and -(IntExprs.this.v02) == 0", "to": "?13(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v02 and -(IntExprs.this.v02) == 0", "to": "?13(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == IntExprs.this.v02 and -(IntExprs.this.v02) == 0", "to": "?13(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this : IntExprs)", "to": "a type that can be selected or applied", "result": "(IntExprs.this : IntExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this.v03 : (Int with it != 0))", "to": "(Int with ?14(it))", "result": "(IntExprs.this.v03 : (Int with it != 0))"}, "children": [{"event": {"$type": "OfType", "from": "(Int with it != 0)", "result": "it != 0"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it != 0"}, "children": []},{"event": {"$type": "Check", "from": "it != 0", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it != 0", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "it != 0", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(IntExprs.this.v03 : (Int with it != 0))", "result": "it == IntExprs.this.v03"}, "children": []},{"event": {"$type": "OfType", "from": "(Int with ?14(it))", "result": "?14(it)"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Int with it != 0)", "result": "it != 0"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == IntExprs.this.v03 and IntExprs.this.v03 != 0"}, "children": []},{"event": {"$type": "Check", "from": "it == IntExprs.this.v03 and IntExprs.this.v03 != 0", "to": "?14(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v03 and IntExprs.this.v03 != 0", "to": "?14(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v03 and IntExprs.this.v03 != 0", "to": "?14(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == IntExprs.this.v03 and IntExprs.this.v03 != 0", "to": "?14(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this : IntExprs)", "to": "a type that can be selected or applied", "result": "(IntExprs.this : IntExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this.v04 : (Int with it > 0))", "to": "(Int with ?15(it))", "result": "(IntExprs.this.v04 : (Int with it > 0))"}, "children": [{"event": {"$type": "OfType", "from": "(Int with it > 0)", "result": "it > 0"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it > 0"}, "children": []},{"event": {"$type": "Check", "from": "it > 0", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it > 0", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "it > 0", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(IntExprs.this.v04 : (Int with it > 0))", "result": "it == IntExprs.this.v04"}, "children": []},{"event": {"$type": "OfType", "from": "(Int with ?15(it))", "result": "?15(it)"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Int with it > 0)", "result": "it > 0"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == IntExprs.this.v04 and IntExprs.this.v04 > 0"}, "children": []},{"event": {"$type": "Check", "from": "it == IntExprs.this.v04 and IntExprs.this.v04 > 0", "to": "?15(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v04 and IntExprs.this.v04 > 0", "to": "?15(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v04 and IntExprs.this.v04 > 0", "to": "?15(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == IntExprs.this.v04 and IntExprs.this.v04 > 0", "to": "?15(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this : IntExprs)", "to": "a type that can be selected or applied", "result": "(IntExprs.this : IntExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this.v05 : (Int with it >= 0))", "to": "(Int with ?16(it))", "result": "(IntExprs.this.v05 : (Int with it >= 0))"}, "children": [{"event": {"$type": "OfType", "from": "(Int with it >= 0)", "result": "it >= 0"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it >= 0"}, "children": []},{"event": {"$type": "Check", "from": "it >= 0", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it >= 0", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "it >= 0", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(IntExprs.this.v05 : (Int with it >= 0))", "result": "it == IntExprs.this.v05"}, "children": []},{"event": {"$type": "OfType", "from": "(Int with ?16(it))", "result": "?16(it)"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Int with it >= 0)", "result": "it >= 0"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == IntExprs.this.v05 and IntExprs.this.v05 >= 0"}, "children": []},{"event": {"$type": "Check", "from": "it == IntExprs.this.v05 and IntExprs.this.v05 >= 0", "to": "?16(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v05 and IntExprs.this.v05 >= 0", "to": "?16(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v05 and IntExprs.this.v05 >= 0", "to": "?16(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == IntExprs.this.v05 and IntExprs.this.v05 >= 0", "to": "?16(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this : IntExprs)", "to": "a type that can be selected or applied", "result": "(IntExprs.this : IntExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this.v06 : (Int with it < 0))", "to": "(Int with ?17(it))", "result": "(IntExprs.this.v06 : (Int with it < 0))"}, "children": [{"event": {"$type": "OfType", "from": "(Int with it < 0)", "result": "it < 0"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it < 0"}, "children": []},{"event": {"$type": "Check", "from": "it < 0", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it < 0", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "it < 0", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(IntExprs.this.v06 : (Int with it < 0))", "result": "it == IntExprs.this.v06"}, "children": []},{"event": {"$type": "OfType", "from": "(Int with ?17(it))", "result": "?17(it)"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Int with it < 0)", "result": "it < 0"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == IntExprs.this.v06 and IntExprs.this.v06 < 0"}, "children": []},{"event": {"$type": "Check", "from": "it == IntExprs.this.v06 and IntExprs.this.v06 < 0", "to": "?17(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v06 and IntExprs.this.v06 < 0", "to": "?17(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v06 and IntExprs.this.v06 < 0", "to": "?17(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == IntExprs.this.v06 and IntExprs.this.v06 < 0", "to": "?17(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this : IntExprs)", "to": "a type that can be selected or applied", "result": "(IntExprs.this : IntExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this.v07 : (Int with it <= 0))", "to": "(Int with ?18(it))", "result": "(IntExprs.this.v07 : (Int with it <= 0))"}, "children": [{"event": {"$type": "OfType", "from": "(Int with it <= 0)", "result": "it <= 0"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it <= 0"}, "children": []},{"event": {"$type": "Check", "from": "it <= 0", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it <= 0", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "it <= 0", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(IntExprs.this.v07 : (Int with it <= 0))", "result": "it == IntExprs.this.v07"}, "children": []},{"event": {"$type": "OfType", "from": "(Int with ?18(it))", "result": "?18(it)"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Int with it <= 0)", "result": "it <= 0"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == IntExprs.this.v07 and IntExprs.this.v07 <= 0"}, "children": []},{"event": {"$type": "Check", "from": "it == IntExprs.this.v07 and IntExprs.this.v07 <= 0", "to": "?18(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v07 and IntExprs.this.v07 <= 0", "to": "?18(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v07 and IntExprs.this.v07 <= 0", "to": "?18(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == IntExprs.this.v07 and IntExprs.this.v07 <= 0", "to": "?18(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this : IntExprs)", "to": "a type that can be selected or applied", "result": "(IntExprs.this : IntExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this.v08 : (Int with it == IntExprs.this.c))", "to": "(Int with ?19(it))", "result": "(IntExprs.this.v08 : (Int with it == IntExprs.this.c))"}, "children": [{"event": {"$type": "OfType", "from": "(Int with it == IntExprs.this.c)", "result": "it == IntExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == IntExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "it == IntExprs.this.c", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == IntExprs.this.c", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "it == IntExprs.this.c", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(IntExprs.this.v08 : (Int with it == IntExprs.this.c))", "result": "it == IntExprs.this.v08"}, "children": []},{"event": {"$type": "OfType", "from": "(Int with ?19(it))", "result": "?19(it)"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Int with it == IntExprs.this.c)", "result": "it == IntExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == IntExprs.this.v08 and IntExprs.this.v08 == IntExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "it == IntExprs.this.v08 and IntExprs.this.v08 == IntExprs.this.c", "to": "?19(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v08 and IntExprs.this.v08 == IntExprs.this.c", "to": "?19(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v08 and IntExprs.this.v08 == IntExprs.this.c", "to": "?19(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == IntExprs.this.v08 and IntExprs.this.v08 == IntExprs.this.c", "to": "?19(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this : IntExprs)", "to": "a type that can be selected or applied", "result": "(IntExprs.this : IntExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this.v09 : (Int with it != IntExprs.this.c))", "to": "(Int with ?20(it))", "result": "(IntExprs.this.v09 : (Int with it != IntExprs.this.c))"}, "children": [{"event": {"$type": "OfType", "from": "(Int with it != IntExprs.this.c)", "result": "it != IntExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it != IntExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "it != IntExprs.this.c", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it != IntExprs.this.c", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "it != IntExprs.this.c", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(IntExprs.this.v09 : (Int with it != IntExprs.this.c))", "result": "it == IntExprs.this.v09"}, "children": []},{"event": {"$type": "OfType", "from": "(Int with ?20(it))", "result": "?20(it)"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Int with it != IntExprs.this.c)", "result": "it != IntExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == IntExprs.this.v09 and IntExprs.this.v09 != IntExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "it == IntExprs.this.v09 and IntExprs.this.v09 != IntExprs.this.c", "to": "?20(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v09 and IntExprs.this.v09 != IntExprs.this.c", "to": "?20(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v09 and IntExprs.this.v09 != IntExprs.this.c", "to": "?20(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == IntExprs.this.v09 and IntExprs.this.v09 != IntExprs.this.c", "to": "?20(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this : IntExprs)", "to": "a type that can be selected or applied", "result": "(IntExprs.this : IntExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this.v10 : (Int with it > IntExprs.this.c))", "to": "(Int with ?21(it))", "result": "(IntExprs.this.v10 : (Int with it > IntExprs.this.c))"}, "children": [{"event": {"$type": "OfType", "from": "(Int with it > IntExprs.this.c)", "result": "it > IntExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it > IntExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "it > IntExprs.this.c", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it > IntExprs.this.c", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "it > IntExprs.this.c", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(IntExprs.this.v10 : (Int with it > IntExprs.this.c))", "result": "it == IntExprs.this.v10"}, "children": []},{"event": {"$type": "OfType", "from": "(Int with ?21(it))", "result": "?21(it)"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Int with it > IntExprs.this.c)", "result": "it > IntExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == IntExprs.this.v10 and IntExprs.this.v10 > IntExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "it == IntExprs.this.v10 and IntExprs.this.v10 > IntExprs.this.c", "to": "?21(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v10 and IntExprs.this.v10 > IntExprs.this.c", "to": "?21(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v10 and IntExprs.this.v10 > IntExprs.this.c", "to": "?21(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == IntExprs.this.v10 and IntExprs.this.v10 > IntExprs.this.c", "to": "?21(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this : IntExprs)", "to": "a type that can be selected or applied", "result": "(IntExprs.this : IntExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this.v11 : (Int with it >= IntExprs.this.c))", "to": "(Int with ?22(it))", "result": "(IntExprs.this.v11 : (Int with it >= IntExprs.this.c))"}, "children": [{"event": {"$type": "OfType", "from": "(Int with it >= IntExprs.this.c)", "result": "it >= IntExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it >= IntExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "it >= IntExprs.this.c", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it >= IntExprs.this.c", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "it >= IntExprs.this.c", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(IntExprs.this.v11 : (Int with it >= IntExprs.this.c))", "result": "it == IntExprs.this.v11"}, "children": []},{"event": {"$type": "OfType", "from": "(Int with ?22(it))", "result": "?22(it)"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Int with it >= IntExprs.this.c)", "result": "it >= IntExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == IntExprs.this.v11 and IntExprs.this.v11 >= IntExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "it == IntExprs.this.v11 and IntExprs.this.v11 >= IntExprs.this.c", "to": "?22(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v11 and IntExprs.this.v11 >= IntExprs.this.c", "to": "?22(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v11 and IntExprs.this.v11 >= IntExprs.this.c", "to": "?22(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == IntExprs.this.v11 and IntExprs.this.v11 >= IntExprs.this.c", "to": "?22(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this : IntExprs)", "to": "a type that can be selected or applied", "result": "(IntExprs.this : IntExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this.v12 : (Int with it < IntExprs.this.c))", "to": "(Int with ?23(it))", "result": "(IntExprs.this.v12 : (Int with it < IntExprs.this.c))"}, "children": [{"event": {"$type": "OfType", "from": "(Int with it < IntExprs.this.c)", "result": "it < IntExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it < IntExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "it < IntExprs.this.c", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it < IntExprs.this.c", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "it < IntExprs.this.c", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(IntExprs.this.v12 : (Int with it < IntExprs.this.c))", "result": "it == IntExprs.this.v12"}, "children": []},{"event": {"$type": "OfType", "from": "(Int with ?23(it))", "result": "?23(it)"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Int with it < IntExprs.this.c)", "result": "it < IntExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == IntExprs.this.v12 and IntExprs.this.v12 < IntExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "it == IntExprs.this.v12 and IntExprs.this.v12 < IntExprs.this.c", "to": "?23(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v12 and IntExprs.this.v12 < IntExprs.this.c", "to": "?23(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v12 and IntExprs.this.v12 < IntExprs.this.c", "to": "?23(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == IntExprs.this.v12 and IntExprs.this.v12 < IntExprs.this.c", "to": "?23(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this : IntExprs)", "to": "a type that can be selected or applied", "result": "(IntExprs.this : IntExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this.v13 : (Int with it <= IntExprs.this.c))", "to": "(Int with ?24(it))", "result": "(IntExprs.this.v13 : (Int with it <= IntExprs.this.c))"}, "children": [{"event": {"$type": "OfType", "from": "(Int with it <= IntExprs.this.c)", "result": "it <= IntExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it <= IntExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "it <= IntExprs.this.c", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it <= IntExprs.this.c", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "it <= IntExprs.this.c", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(IntExprs.this.v13 : (Int with it <= IntExprs.this.c))", "result": "it == IntExprs.this.v13"}, "children": []},{"event": {"$type": "OfType", "from": "(Int with ?24(it))", "result": "?24(it)"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Int with it <= IntExprs.this.c)", "result": "it <= IntExprs.this.c"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == IntExprs.this.v13 and IntExprs.this.v13 <= IntExprs.this.c"}, "children": []},{"event": {"$type": "Check", "from": "it == IntExprs.this.v13 and IntExprs.this.v13 <= IntExprs.this.c", "to": "?24(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v13 and IntExprs.this.v13 <= IntExprs.this.c", "to": "?24(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v13 and IntExprs.this.v13 <= IntExprs.this.c", "to": "?24(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == IntExprs.this.v13 and IntExprs.this.v13 <= IntExprs.this.c", "to": "?24(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this : IntExprs)", "to": "a type that can be selected or applied", "result": "(IntExprs.this : IntExprs)"}, "children": []},{"event": {"$type": "CheckExprConforms", "from": "(IntExprs.this.v14 : (Int with it == IntExprs.this.f(it)))", "to": "(Int with ?25(it))", "result": "(IntExprs.this.v14 : (Int with it == IntExprs.this.f(it)))"}, "children": [{"event": {"$type": "OfType", "from": "(Int with it == IntExprs.this.f(it))", "result": "it == IntExprs.this.f(it)"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]},{"event": {"$type": "OfType", "from": "(n: Int): Int", "result": "true"}, "children": []},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == IntExprs.this.f(it)"}, "children": []},{"event": {"$type": "Check", "from": "it == IntExprs.this.f(it)", "to": "true", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == IntExprs.this.f(it)", "to": "true", "frozen": "true", "result": "true"}, "children": [{"event": {"$type": "LeafImplies", "from": "it == IntExprs.this.f(it)", "to": "true", "result": "true"}, "children": []}]}]}]},{"event": {"$type": "OfType", "from": "(IntExprs.this.v14 : (Int with it == IntExprs.this.f(it)))", "result": "it == IntExprs.this.v14"}, "children": []},{"event": {"$type": "OfType", "from": "(Int with ?25(it))", "result": "?25(it)"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(Int with it == IntExprs.this.f(it))", "result": "it == IntExprs.this.f(it)"}, "children": [{"event": {"$type": "OfType", "from": "Int", "result": "true"}, "children": [{"event": {"$type": "OfType", "from": "AnyVal {...}", "result": "true"}, "children": []}]}]},{"event": {"$type": "OfType", "from": "(n: Int): Int", "result": "true"}, "children": []},{"event": {"$type": "Push", "currentFacts": "true"}, "children": [{"event": {"$type": "Assume", "expr": "it == IntExprs.this.v14 and IntExprs.this.v14 == IntExprs.this.f(IntExprs.this.\n  v14)"}, "children": []},{"event": {"$type": "Check", "from": "it == IntExprs.this.v14 and IntExprs.this.v14 == IntExprs.this.f(IntExprs.this.\n  v14)", "to": "?25(it)", "result": "true"}, "children": [{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v14 and IntExprs.this.v14 == IntExprs.this.f(IntExprs.this.\n  v14)", "to": "?25(it)", "frozen": "true", "result": "false"}, "children": []},{"event": {"$type": "TryImply", "from": "it == IntExprs.this.v14 and IntExprs.this.v14 == IntExprs.this.f(IntExprs.this.\n  v14)", "to": "?25(it)", "frozen": "false", "result": "true"}, "children": [{"event": {"$type": "TryAddImplicationToVar", "from": "it == IntExprs.this.v14 and IntExprs.this.v14 == IntExprs.this.f(IntExprs.this.\n  v14)", "to": "?25(it)", "result": "true"}, "children": []}]}]}]}]},{"event": {"$type": "CheckExprConforms", "from": "<notype>", "to": "<?>", "result": "<notype>"}, "children": []}],
  "naiveSolverVars": [{"exprs": ["it == BoolExprs.this.v01","?1(it)","it == BoolExprs.this.v02 and false","?2(it)","it == BoolExprs.this.v03 and !(BoolExprs.this.v03)","?3(it)","it == BoolExprs.this.v04 and BoolExprs.this.v04 and BoolExprs.this.v04","?4(it)","it == BoolExprs.this.v05 and BoolExprs.this.v05","?5(it)","it == BoolExprs.this.v06 and BoolExprs.this.c","?6(it)","it == BoolExprs.this.v07 and !(BoolExprs.this.c)","?7(it)","it == BoolExprs.this.v08 and BoolExprs.this.v08 and BoolExprs.this.c","?8(it)","it == BoolExprs.this.v09 and BoolExprs.this.v09 or BoolExprs.this.c","?9(it)","it == BoolExprs.this.v10 and BoolExprs.this.f(BoolExprs.this.v10)","?10(it)","it == IntExprs.this.v01 and IntExprs.this.v01 == 0","?12(it)","it == IntExprs.this.v02 and -(IntExprs.this.v02) == 0","?13(it)","it == IntExprs.this.v03 and IntExprs.this.v03 != 0","?14(it)","it == IntExprs.this.v04 and IntExprs.this.v04 > 0","?15(it)","it == IntExprs.this.v05 and IntExprs.this.v05 >= 0","?16(it)","it == IntExprs.this.v06 and IntExprs.this.v06 < 0","?17(it)","it == IntExprs.this.v07 and IntExprs.this.v07 <= 0","?18(it)","it == IntExprs.this.v08 and IntExprs.this.v08 == IntExprs.this.c","?19(it)","it == IntExprs.this.v09 and IntExprs.this.v09 != IntExprs.this.c","?20(it)","it == IntExprs.this.v10 and IntExprs.this.v10 > IntExprs.this.c","?21(it)","it == IntExprs.this.v11 and IntExprs.this.v11 >= IntExprs.this.c","?22(it)","it == IntExprs.this.v12 and IntExprs.this.v12 < IntExprs.this.c","?23(it)","it == IntExprs.this.v13 and IntExprs.this.v13 <= IntExprs.this.c","?24(it)","it == IntExprs.this.v14 and IntExprs.this.v14 == IntExprs.this.f(IntExprs.this.\n  v14)","?25(it)"], "dependencies": [["0","1"],["2","3"],["4","5"],["6","7"],["8","9"],["10","11"],["12","13"],["14","15"],["16","17"],["18","19"],["20","21"],["22","23"],["24","25"],["26","27"],["28","29"],["30","31"],["32","33"],["34","35"],["36","37"],["38","39"],["40","41"],["42","43"],["44","45"],["46","47"]]}],
  "treeBefore": "package <empty> {\n  import language.experimental.setNotation\n  @SourceFile(\"tests/pos-custom-args/qualified-types/01_exprs.scala\") abstract\n    class BoolExprs() extends Object() {\n    val c: Boolean\n    def f(b: Boolean): Boolean\n    val v01: (Boolean with true)\n    val v02: (Boolean with false)\n    val v03: (Boolean with !(it))\n    val v04: (Boolean with it and it)\n    val v05: (Boolean with it)\n    val v06: (Boolean with BoolExprs.this.c)\n    val v07: (Boolean with !(BoolExprs.this.c))\n    val v08: (Boolean with it and BoolExprs.this.c)\n    val v09: (Boolean with it or BoolExprs.this.c)\n    val v10: (Boolean with BoolExprs.this.f(it))\n    val w01: (Boolean with true) = this.v01\n    val w02: (Boolean with false) = this.v02\n    val w03: (Boolean with !(it)) = this.v03\n    val w04: (Boolean with it and it) = this.v04\n    val w05: (Boolean with it) = this.v05\n    val w06: (Boolean with BoolExprs.this.c) = this.v06\n    val w07: (Boolean with !(BoolExprs.this.c)) = this.v07\n    val w08: (Boolean with it and BoolExprs.this.c) = this.v08\n    val w09: (Boolean with it or BoolExprs.this.c) = this.v09\n    val w10: (Boolean with BoolExprs.this.f(it)) = this.v10\n  }\n  @SourceFile(\"tests/pos-custom-args/qualified-types/01_exprs.scala\") abstract\n    class IntExprs() extends Object() {\n    val c: Int\n    def f(n: Int): Int\n    val v01: (Int with it == 0)\n    val v02: (Int with -(it) == 0)\n    val v03: (Int with it != 0)\n    val v04: (Int with it > 0)\n    val v05: (Int with it >= 0)\n    val v06: (Int with it < 0)\n    val v07: (Int with it <= 0)\n    val v08: (Int with it == IntExprs.this.c)\n    val v09: (Int with it != IntExprs.this.c)\n    val v10: (Int with it > IntExprs.this.c)\n    val v11: (Int with it >= IntExprs.this.c)\n    val v12: (Int with it < IntExprs.this.c)\n    val v13: (Int with it <= IntExprs.this.c)\n    val v14: (Int with it == IntExprs.this.f(it))\n    val w01: (Int with it == 0) = this.v01\n    val w02: (Int with -(it) == 0) = this.v02\n    val w03: (Int with it != 0) = this.v03\n    val w04: (Int with it > 0) = this.v04\n    val w05: (Int with it >= 0) = this.v05\n    val w06: (Int with it < 0) = this.v06\n    val w07: (Int with it <= 0) = this.v07\n    val w08: (Int with it == IntExprs.this.c) = this.v08\n    val w09: (Int with it != IntExprs.this.c) = this.v09\n    val w10: (Int with it > IntExprs.this.c) = this.v10\n    val w11: (Int with it >= IntExprs.this.c) = this.v11\n    val w12: (Int with it < IntExprs.this.c) = this.v12\n    val w13: (Int with it <= IntExprs.this.c) = this.v13\n    val w14: (Int with it == IntExprs.this.f(it)) = this.v14\n  }\n}",
  "treeSetup": "package <empty> {\n  import language.experimental.setNotation\n  @SourceFile(\"tests/pos-custom-args/qualified-types/01_exprs.scala\") abstract\n    class BoolExprs() extends Object() {\n    val c: Boolean\n    def f(b: Boolean): Boolean\n    val v01: (Boolean with true)\n    val v02: (Boolean with false)\n    val v03: (Boolean with !(it))\n    val v04: (Boolean with it and it)\n    val v05: (Boolean with it)\n    val v06: (Boolean with BoolExprs.this.c)\n    val v07: (Boolean with !(BoolExprs.this.c))\n    val v08: (Boolean with it and BoolExprs.this.c)\n    val v09: (Boolean with it or BoolExprs.this.c)\n    val v10: (Boolean with BoolExprs.this.f(it))\n    val w01: (Boolean with ?1(it)) = this.v01\n    val w02: (Boolean with ?2(it)) = this.v02\n    val w03: (Boolean with ?3(it)) = this.v03\n    val w04: (Boolean with ?4(it)) = this.v04\n    val w05: (Boolean with ?5(it)) = this.v05\n    val w06: (Boolean with ?6(it)) = this.v06\n    val w07: (Boolean with ?7(it)) = this.v07\n    val w08: (Boolean with ?8(it)) = this.v08\n    val w09: (Boolean with ?9(it)) = this.v09\n    val w10: (Boolean with ?10(it)) = this.v10\n  }\n  @SourceFile(\"tests/pos-custom-args/qualified-types/01_exprs.scala\") abstract\n    class IntExprs() extends Object() {\n    val c: Int\n    def f(n: Int): Int\n    val v01: (Int with it == 0)\n    val v02: (Int with -(it) == 0)\n    val v03: (Int with it != 0)\n    val v04: (Int with it > 0)\n    val v05: (Int with it >= 0)\n    val v06: (Int with it < 0)\n    val v07: (Int with it <= 0)\n    val v08: (Int with it == IntExprs.this.c)\n    val v09: (Int with it != IntExprs.this.c)\n    val v10: (Int with it > IntExprs.this.c)\n    val v11: (Int with it >= IntExprs.this.c)\n    val v12: (Int with it < IntExprs.this.c)\n    val v13: (Int with it <= IntExprs.this.c)\n    val v14: (Int with it == IntExprs.this.f(it))\n    val w01: (Int with ?12(it)) = this.v01\n    val w02: (Int with ?13(it)) = this.v02\n    val w03: (Int with ?14(it)) = this.v03\n    val w04: (Int with ?15(it)) = this.v04\n    val w05: (Int with ?16(it)) = this.v05\n    val w06: (Int with ?17(it)) = this.v06\n    val w07: (Int with ?18(it)) = this.v07\n    val w08: (Int with ?19(it)) = this.v08\n    val w09: (Int with ?20(it)) = this.v09\n    val w10: (Int with ?21(it)) = this.v10\n    val w11: (Int with ?22(it)) = this.v11\n    val w12: (Int with ?23(it)) = this.v12\n    val w13: (Int with ?24(it)) = this.v13\n    val w14: (Int with ?25(it)) = this.v14\n  }\n}",
  "treeAfter": "package <empty> {\n  import language.experimental.setNotation\n  @SourceFile(\"tests/pos-custom-args/qualified-types/01_exprs.scala\") abstract\n    class BoolExprs() extends Object() {\n    val c: Boolean\n    def f(b: Boolean): Boolean\n    val v01: Boolean\n    val v02: (Boolean with false)\n    val v03: (Boolean with !(it))\n    val v04: (Boolean with it and it)\n    val v05: (Boolean with it)\n    val v06: (Boolean with BoolExprs.this.c)\n    val v07: (Boolean with !(BoolExprs.this.c))\n    val v08: (Boolean with it and BoolExprs.this.c)\n    val v09: (Boolean with it or BoolExprs.this.c)\n    val v10: (Boolean with BoolExprs.this.f(it))\n    val w01: (Boolean with it == BoolExprs.this.v01) = this.v01\n    val w02: (Boolean with it == BoolExprs.this.v02 and false) = this.v02\n    val w03: (Boolean with it == BoolExprs.this.v03 and !(BoolExprs.this.v03))\n       = this.v03\n    val w04:\n      \n        (Boolean with\n          it == BoolExprs.this.v04 and BoolExprs.this.v04 and BoolExprs.this.v04\n          )\n      \n     = this.v04\n    val w05: (Boolean with it == BoolExprs.this.v05 and BoolExprs.this.v05) =\n      this.v05\n    val w06: (Boolean with it == BoolExprs.this.v06 and BoolExprs.this.c) =\n      this.v06\n    val w07: (Boolean with it == BoolExprs.this.v07 and !(BoolExprs.this.c)) =\n      this.v07\n    val w08:\n      \n        (Boolean with\n          it == BoolExprs.this.v08 and BoolExprs.this.v08 and BoolExprs.this.c)\n      \n     = this.v08\n    val w09:\n      \n        (Boolean with\n          it == BoolExprs.this.v09 and BoolExprs.this.v09 or BoolExprs.this.c)\n      \n     = this.v09\n    val w10:\n      \n        (Boolean with\n          it == BoolExprs.this.v10 and BoolExprs.this.f(BoolExprs.this.v10))\n      \n     = this.v10\n  }\n  @SourceFile(\"tests/pos-custom-args/qualified-types/01_exprs.scala\") abstract\n    class IntExprs() extends Object() {\n    val c: Int\n    def f(n: Int): Int\n    val v01: (Int with it == 0)\n    val v02: (Int with -(it) == 0)\n    val v03: (Int with it != 0)\n    val v04: (Int with it > 0)\n    val v05: (Int with it >= 0)\n    val v06: (Int with it < 0)\n    val v07: (Int with it <= 0)\n    val v08: (Int with it == IntExprs.this.c)\n    val v09: (Int with it != IntExprs.this.c)\n    val v10: (Int with it > IntExprs.this.c)\n    val v11: (Int with it >= IntExprs.this.c)\n    val v12: (Int with it < IntExprs.this.c)\n    val v13: (Int with it <= IntExprs.this.c)\n    val v14: (Int with it == IntExprs.this.f(it))\n    val w01: (Int with it == IntExprs.this.v01 and IntExprs.this.v01 == 0) =\n      this.v01\n    val w02: (Int with it == IntExprs.this.v02 and -(IntExprs.this.v02) == 0) =\n      this.v02\n    val w03: (Int with it == IntExprs.this.v03 and IntExprs.this.v03 != 0) =\n      this.v03\n    val w04: (Int with it == IntExprs.this.v04 and IntExprs.this.v04 > 0) =\n      this.v04\n    val w05: (Int with it == IntExprs.this.v05 and IntExprs.this.v05 >= 0) =\n      this.v05\n    val w06: (Int with it == IntExprs.this.v06 and IntExprs.this.v06 < 0) =\n      this.v06\n    val w07: (Int with it == IntExprs.this.v07 and IntExprs.this.v07 <= 0) =\n      this.v07\n    val w08:\n      \n        (Int with\n          it == IntExprs.this.v08 and IntExprs.this.v08 == IntExprs.this.c)\n      \n     = this.v08\n    val w09:\n      \n        (Int with\n          it == IntExprs.this.v09 and IntExprs.this.v09 != IntExprs.this.c)\n      \n     = this.v09\n    val w10:\n      (Int with it == IntExprs.this.v10 and IntExprs.this.v10 > IntExprs.this.c)\n       = this.v10\n    val w11:\n      \n        (Int with\n          it == IntExprs.this.v11 and IntExprs.this.v11 >= IntExprs.this.c)\n      \n     = this.v11\n    val w12:\n      (Int with it == IntExprs.this.v12 and IntExprs.this.v12 < IntExprs.this.c)\n       = this.v12\n    val w13:\n      \n        (Int with\n          it == IntExprs.this.v13 and IntExprs.this.v13 <= IntExprs.this.c)\n      \n     = this.v13\n    val w14:\n      \n        (Int with\n          it == IntExprs.this.v14 and IntExprs.this.v14 == IntExprs.this.f(IntExprs.this.\n  v14)\n          )\n      \n     = this.v14\n  }\n}"
}